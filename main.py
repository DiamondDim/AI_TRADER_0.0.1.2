#!/usr/bin/env python3
"""
–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å AI Trader - –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
"""

import os
import sys
import argparse
import logging
from datetime import datetime
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from ai_trader import AITrader
from src.core.logger import setup_logger  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç


def parse_arguments():
    """–ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏"""
    parser = argparse.ArgumentParser(description='AI Trader - Automated Trading System')
    parser.add_argument('--strategy', type=str, help='–¢–æ—Ä–≥–æ–≤–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è (simple_ma, rsi, macd, bollinger, advanced)')
    parser.add_argument('--symbol', type=str, help='–¢–æ—Ä–≥–æ–≤—ã–π —Å–∏–º–≤–æ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä: EURUSD)')
    parser.add_argument('--timeframe', type=str, default='H1', help='–¢–∞–π–º—Ñ—Ä–µ–π–º (M1, M5, H1, H4, D1)')
    parser.add_argument('--test', action='store_true', help='–ó–∞–ø—É—Å–∫ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ')
    parser.add_argument('--demo', action='store_true', help='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–µ–º–æ-—Å—á–µ—Ç')
    parser.add_argument('--risk', type=float, help='–£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö')

    return parser.parse_args()


def show_menu():
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    print("\n" + "=" * 60)
    print("üéØ AI TRADER - –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ")
    print("=" * 60)
    print("1. üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–∏–º–≤–æ–ª–æ–≤")
    print("2. üîç –ê–Ω–∞–ª–∏–∑ —Å–∏–º–≤–æ–ª–∞")
    print("3. üìà –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑")
    print("4. üí∞ –¢–æ—Ä–≥–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏")
    print("5. üìã –ú–æ–∏ –ø–æ–∑–∏—Ü–∏–∏ –∏ –æ—Ä–¥–µ—Ä–∞")
    print("6. ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∏—Å–∫–æ–≤")
    print("7. üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º")
    print("8. üéØ –í—ã–±–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏")
    print("9. üì° –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä—ã–Ω–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")
    print("0. ‚ùå –í—ã—Ö–æ–¥")
    print("=" * 60)


def show_strategy_menu():
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"""
    print("\n" + "=" * 60)
    print("üéØ –í–´–ë–û–† –°–¢–†–ê–¢–ï–ì–ò–ò –¢–û–†–ì–û–í–õ–ò")
    print("=" * 60)
    print("1. üìà –£–ª—É—á—à–µ–Ω–Ω–∞—è MA —Å—Ç—Ä–∞—Ç–µ–≥–∏—è (–°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫)")
    print("2. üìä –£–ª—É—á—à–µ–Ω–Ω–∞—è RSI —Å—Ç—Ä–∞—Ç–µ–≥–∏—è (–ù–∏–∑–∫–∏–π —Ä–∏—Å–∫)")
    print("3. üîÑ –£–ª—É—á—à–µ–Ω–Ω–∞—è MACD —Å—Ç—Ä–∞—Ç–µ–≥–∏—è (–°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫)")
    print("4. üìâ –£–ª—É—á—à–µ–Ω–Ω–∞—è Bollinger Bands —Å—Ç—Ä–∞—Ç–µ–≥–∏—è (–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫)")
    print("5. üöÄ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –º—É–ª—å—Ç–∏-—Å—Ç—Ä–∞—Ç–µ–≥–∏—è (–ù–∏–∑–∫–∏–π —Ä–∏—Å–∫)")
    print("6. üìã –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é")
    print("7. üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    print("=" * 60)


def show_realtime_monitoring_info():
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"""
    print("\n" + "=" * 60)
    print("üì° –ú–û–ù–ò–¢–û–†–ò–ù–ì –†–´–ù–ö–ê –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò")
    print("=" * 60)
    print("üí° –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º:")
    print("   ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ 'stop' - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
    print("   ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ 'status' - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å")
    print("   ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ 'summary' - –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–¥–∫—É —Ä—ã–Ω–∫–∞")
    print("   ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ 'symbols' - –ø–æ–∫–∞–∑–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Å–∏–º–≤–æ–ª—ã")
    print("   ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ 'exit' - –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
    print("=" * 60)
    print("üîÑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥")
    print("üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞—é—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω, –æ–±—ä–µ–º—ã –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã")
    print("üéØ –°–∏—Å—Ç–µ–º–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä—ã–Ω–∫–∞ (–ë—ã—á—å–µ/–ú–µ–¥–≤–µ–∂—å–µ/–ë–æ–∫–æ–≤–æ–µ)")
    print("=" * 60)


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    # –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    setup_logger()
    logger = logging.getLogger('AITrader')

    # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    args = parse_arguments()

    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AI Trader
        logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AI Trader...")
        trader = AITrader()

        if not trader.initialize():
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å AI Trader")
            return

        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
        if args.strategy:
            if trader.set_strategy(args.strategy):
                logger.info(f"‚úÖ –°—Ç—Ä–∞—Ç–µ–≥–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {args.strategy}")
            else:
                logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é: {args.strategy}")

        if args.risk:
            trader.update_risk_management(args.risk)
            logger.info(f"‚úÖ –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {args.risk}%")

        # –ó–∞–ø—É—Å–∫ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç
        if args.test:
            logger.info("üß™ –ó–∞–ø—É—Å–∫ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ...")
            if args.symbol:
                trader.run_simple_strategy(args.symbol, args.timeframe)
            else:
                trader.test_strategy_flow()
            return

        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–µ–Ω—é
        while True:
            show_menu()
            choice = input("\nüìù –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: ").strip()

            if choice == '0':
                print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break

            elif choice == '1':
                # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–∏–º–≤–æ–ª–æ–≤
                print("\nüìä –ó–ê–ì–†–£–ó–ö–ê –°–ü–ò–°–ö–ê –°–ò–ú–í–û–õ–û–í...")
                trader.show_available_symbols()

            elif choice == '2':
                # –ê–Ω–∞–ª–∏–∑ —Å–∏–º–≤–æ–ª–∞
                print("\nüîç –ê–ù–ê–õ–ò–ó –°–ò–ú–í–û–õ–ê")
                symbol = input("–í–≤–µ–¥–∏—Ç–µ —Å–∏–º–≤–æ–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: EURUSD): ").strip()
                if symbol:
                    trader.analyze_symbol(symbol)
                else:
                    print("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω —Å–∏–º–≤–æ–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")

            elif choice == '3':
                # –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
                print("\nüìà –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó")
                symbol = input("–í–≤–µ–¥–∏—Ç–µ —Å–∏–º–≤–æ–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: ").strip()
                if symbol:
                    timeframe = input("–í–≤–µ–¥–∏—Ç–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º (M1, M5, H1, H4, D1) [H1]: ").strip() or 'H1'
                    trader.technical_analysis_flow(symbol, timeframe)
                else:
                    print("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω —Å–∏–º–≤–æ–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")

            elif choice == '4':
                # –¢–æ—Ä–≥–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
                print("\nüí∞ –¢–û–†–ì–û–í–´–ï –û–ü–ï–†–ê–¶–ò–ò")
                trader.trading_operations_flow()

            elif choice == '5':
                # –ú–æ–∏ –ø–æ–∑–∏—Ü–∏–∏ –∏ –æ—Ä–¥–µ—Ä–∞
                print("\nüìã –ú–û–ò –ü–û–ó–ò–¶–ò–ò –ò –û–†–î–ï–†–ê")
                trader.show_positions_and_orders()

            elif choice == '6':
                # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∏—Å–∫–æ–≤
                print("\n‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø –†–ò–°–ö–ê–ú–ò")
                try:
                    risk_percent = float(input("–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ –≤ % (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1.0): "))
                    trader.update_risk_management(risk_percent)
                    print(f"‚úÖ –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {risk_percent}%")
                except ValueError:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∏—Å–∫–∞")

            elif choice == '7':
                # –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
                print("\nüß™ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú")
                trader.test_strategy_flow()

            elif choice == '8':
                # –í—ã–±–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏
                strategy_menu_loop(trader)

            elif choice == '9':
                # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä—ã–Ω–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
                print("\nüì° –ó–ê–ü–£–°–ö –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –†–´–ù–ö–ê...")
                show_realtime_monitoring_info()
                trader.real_time_monitoring_flow()

            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

            input("\n‚Üµ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        logger.info("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (Ctrl+C)")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏: {e}")
        print(f"\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        # –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        try:
            if 'trader' in locals():
                trader.shutdown()
                logger.info("‚úÖ AI Trader –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã: {e}")


def strategy_menu_loop(trader):
    """–¶–∏–∫–ª –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"""
    while True:
        show_strategy_menu()
        choice = input("\nüìù –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é: ").strip()

        if choice == '1':
            if trader.set_strategy('simple_ma'):
                print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –£–ª—É—á—à–µ–Ω–Ω–∞—è MA —Å—Ç—Ä–∞—Ç–µ–≥–∏—è")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏")

        elif choice == '2':
            if trader.set_strategy('rsi'):
                print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –£–ª—É—á—à–µ–Ω–Ω–∞—è RSI —Å—Ç—Ä–∞—Ç–µ–≥–∏—è")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏")

        elif choice == '3':
            if trader.set_strategy('macd'):
                print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –£–ª—É—á—à–µ–Ω–Ω–∞—è MACD —Å—Ç—Ä–∞—Ç–µ–≥–∏—è")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏")

        elif choice == '4':
            if trader.set_strategy('bollinger'):
                print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –£–ª—É—á—à–µ–Ω–Ω–∞—è Bollinger Bands —Å—Ç—Ä–∞—Ç–µ–≥–∏—è")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏")

        elif choice == '5':
            if trader.set_strategy('advanced'):
                print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –º—É–ª—å—Ç–∏-—Å—Ç—Ä–∞—Ç–µ–≥–∏—è")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏")

        elif choice == '6':
            # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
            current_strategy = trader.get_current_strategy()
            if current_strategy:
                print(f"\nüìã –¢–ï–ö–£–©–ê–Ø –°–¢–†–ê–¢–ï–ì–ò–Ø: {current_strategy['name']}")
                print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {current_strategy['description']}")
                print(f"‚ö° –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: {current_strategy['risk_level']}")
            else:
                print("‚ùå –°—Ç—Ä–∞—Ç–µ–≥–∏—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

        elif choice == '7':
            break

        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

        input("\n‚Üµ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")


if __name__ == "__main__":
    print("üöÄ AI TRADER - Automated Trading System")
    print("üìÖ –ó–∞–ø—É—Å–∫:", datetime.now().strftime("%Y-%m-%d %H:%M:%S"))
    print("üîí –í–µ—Ä—Å–∏—è: AI Trader 1.2.0")
    print("üìä –°—Ç–∞—Ç—É—Å: PRODUCTION READY üü¢")
    print("\n" + "=" * 50)

    main()
