import MetaTrader5 as mt5
import logging
from typing import Optional, Tuple

logger = logging.getLogger('MT5')


class MT5:
    def __init__(self):
        self.connected = False
        self.logger = logger

    def initialize(self, path: str = "", login: int = 0, password: str = "", server: str = "") -> Tuple[bool, str]:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MT5

        Args:
            path: –ø—É—Ç—å –∫ —Ç–µ—Ä–º–∏–Ω–∞–ª—É MT5
            login: –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞
            password: –ø–∞—Ä–æ–ª—å
            server: –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞

        Returns:
            Tuple[bool, str]: (–£—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è, –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ)
        """
        try:
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –µ—Å–ª–∏ –±—ã–ª–æ
            if mt5.initialize():
                mt5.shutdown()

            # –ü—ã—Ç–∞–µ–º—Å—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å MT5
            if not mt5.initialize(path=path, login=login, password=password, server=server):
                error_code = mt5.last_error()
                error_msg = f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ MT5: {self._get_error_description(error_code)}"
                self.logger.error(error_msg)
                return False, error_msg

            self.connected = True
            self.logger.info("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MT5")

            # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
            account_info = mt5.account_info()
            if account_info:
                self.logger.info(f"üìä –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å—á–µ—Ç—É: {account_info.login}, –°–µ—Ä–≤–µ—Ä: {account_info.server}")
                self.logger.info(f"üí≥ –ë–∞–ª–∞–Ω—Å: {account_info.balance:.2f} {account_info.currency}")

            return True, "–£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"

        except Exception as e:
            error_msg = f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ MT5: {str(e)}"
            self.logger.error(error_msg)
            return False, error_msg

    def _get_error_description(self, error_code: int) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ MT5"""
        error_descriptions = {
            1: "–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏",
            2: "–¢–µ—Ä–º–∏–Ω–∞–ª –Ω–µ –∑–∞–ø—É—â–µ–Ω",
            3: "–ù–µ–≤–µ—Ä–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞",
            6: "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º",
            7: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞–º—è—Ç–∏",
            8: "–û—à–∏–±–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏",
            9: "–ù–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã",
            64: "–û—à–∏–±–∫–∞ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏",
            65: "–û—à–∏–±–∫–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏",
            128: "–¢–∞–π–º–∞—É—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è",
            129: "–û—à–∏–±–∫–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è",
            130: "–ù–µ–≤–µ—Ä–Ω—ã–π —Å–µ—Ä–≤–µ—Ä",
            131: "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω",
            132: "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å",
            133: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω",
            134: "–°–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã–µ –∑–∞–ø—Ä–æ—Å—ã",
        }
        return error_descriptions.get(error_code, f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {error_code}")

    def check_connection(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MT5"""
        try:
            if not self.connected:
                return False

            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
            account_info = mt5.account_info()
            if account_info is None:
                self.connected = False
                self.logger.warning("‚ùå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MT5 –ø–æ—Ç–µ—Ä—è–Ω–æ")
                return False

            self.connected = True
            return True

        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {str(e)}")
            self.connected = False
            return False

    def shutdown(self):
        """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MT5"""
        try:
            if self.connected:
                mt5.shutdown()
                self.connected = False
                self.logger.info("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MT5 –∑–∞–∫—Ä—ã—Ç–æ")
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {str(e)}")

    def get_account_info(self) -> Optional[dict]:
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ"""
        try:
            if not self.check_connection():
                return None

            account_info = mt5.account_info()
            if account_info:
                return {
                    'login': account_info.login,
                    'balance': account_info.balance,
                    'equity': account_info.equity,
                    'margin': account_info.margin,
                    'free_margin': account_info.margin_free,
                    'leverage': account_info.leverage,
                    'currency': account_info.currency,
                    'server': account_info.server,
                    'name': account_info.name,
                    'company': account_info.company
                }
            return None
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ: {str(e)}")
            return None

    def __del__(self):
        """–î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
        self.shutdown()
